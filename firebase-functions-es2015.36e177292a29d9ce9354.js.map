{"version":3,"sources":["webpack:///node_modules/@firebase/functions/dist/index.esm.js"],"names":["errorCodeMap","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","UNAUTHENTICATED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","_super","HttpsErrorImpl","code","message","details","_this","call","this","Object","setPrototypeOf","prototype","Error","ContextProvider","authProvider","messagingProvider","auth","messaging","getImmediate","optional","get","then","getAuthToken","token","_a","label","undefined","trys","push","getToken","sent","accessToken","getInstanceIdToken","self","Notification","permission","getContext","authToken","instanceIdToken","mapValues","o","f","result","key","hasOwnProperty","instance","fetchImpl","namespaceExports","Serializer","encode","data","Number","valueOf","isFinite","toString","Date","toISOString","Array","isArray","map","x","decode","json","value","isNaN","Service","app_","appCheckProvider","regionOrCustomDomain_","serializer","emulatorOrigin","delete","Promise","resolve","deleteService","contextProvider","cancelAllRequests","url","URL","customDomain","origin","region","e","defineProperty","enumerable","configurable","_url","name","projectId","options","useEmulator","host","port","useFunctionsEmulator","httpsCallable","postJSON","body","headers","appCheckToken","response","getAppCheckToken","method","JSON","stringify","status","appCheck","context","timer","failAfterPromise","error","responseData","_b","millis","promise","_","reject","setTimeout","timeout","race","clearTimeoutWrapper","bodyJSON","description","errorJSON","status_1","clearTimeout","fetch","bind","Functions","registerComponent","container","regionOrCustomDomain","instanceIdentifier","app","getProvider","setServiceProps","setMultipleInstances","registerVersion"],"mappings":"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","file":"x","sourcesContent":["import firebase from '@firebase/app';\nimport { __extends, __awaiter, __generator } from 'tslib';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Standard error codes for different ways a request can fail, as defined by:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * This map is used primarily to convert from a backend error code string to\r\n * a client SDK error code string, and make sure it's in the supported set.\r\n */\r\nvar errorCodeMap = {\r\n    OK: 'ok',\r\n    CANCELLED: 'cancelled',\r\n    UNKNOWN: 'unknown',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    DEADLINE_EXCEEDED: 'deadline-exceeded',\r\n    NOT_FOUND: 'not-found',\r\n    ALREADY_EXISTS: 'already-exists',\r\n    PERMISSION_DENIED: 'permission-denied',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    RESOURCE_EXHAUSTED: 'resource-exhausted',\r\n    FAILED_PRECONDITION: 'failed-precondition',\r\n    ABORTED: 'aborted',\r\n    OUT_OF_RANGE: 'out-of-range',\r\n    UNIMPLEMENTED: 'unimplemented',\r\n    INTERNAL: 'internal',\r\n    UNAVAILABLE: 'unavailable',\r\n    DATA_LOSS: 'data-loss'\r\n};\r\n/**\r\n * An explicit error that can be thrown from a handler to send an error to the\r\n * client that called the function.\r\n */\r\nvar HttpsErrorImpl = /** @class */ (function (_super) {\r\n    __extends(HttpsErrorImpl, _super);\r\n    function HttpsErrorImpl(code, message, details) {\r\n        var _this = _super.call(this, message) || this;\r\n        // This is a workaround for a bug in TypeScript when extending Error:\r\n        // tslint:disable-next-line\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(_this, HttpsErrorImpl.prototype);\r\n        _this.code = code;\r\n        _this.details = details;\r\n        return _this;\r\n    }\r\n    return HttpsErrorImpl;\r\n}(Error));\r\n/**\r\n * Takes an HTTP status code and returns the corresponding ErrorCode.\r\n * This is the standard HTTP status code -> error mapping defined in:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * @param status An HTTP status code.\r\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\r\n */\r\nfunction codeForHTTPStatus(status) {\r\n    // Make sure any successful status is OK.\r\n    if (status >= 200 && status < 300) {\r\n        return 'ok';\r\n    }\r\n    switch (status) {\r\n        case 0:\r\n            // This can happen if the server returns 500.\r\n            return 'internal';\r\n        case 400:\r\n            return 'invalid-argument';\r\n        case 401:\r\n            return 'unauthenticated';\r\n        case 403:\r\n            return 'permission-denied';\r\n        case 404:\r\n            return 'not-found';\r\n        case 409:\r\n            return 'aborted';\r\n        case 429:\r\n            return 'resource-exhausted';\r\n        case 499:\r\n            return 'cancelled';\r\n        case 500:\r\n            return 'internal';\r\n        case 501:\r\n            return 'unimplemented';\r\n        case 503:\r\n            return 'unavailable';\r\n        case 504:\r\n            return 'deadline-exceeded';\r\n    }\r\n    return 'unknown';\r\n}\r\n/**\r\n * Takes an HTTP response and returns the corresponding Error, if any.\r\n */\r\nfunction _errorForResponse(status, bodyJSON, serializer) {\r\n    var code = codeForHTTPStatus(status);\r\n    // Start with reasonable defaults from the status code.\r\n    var description = code;\r\n    var details = undefined;\r\n    // Then look through the body for explicit details.\r\n    try {\r\n        var errorJSON = bodyJSON && bodyJSON.error;\r\n        if (errorJSON) {\r\n            var status_1 = errorJSON.status;\r\n            if (typeof status_1 === 'string') {\r\n                if (!errorCodeMap[status_1]) {\r\n                    // They must've included an unknown error code in the body.\r\n                    return new HttpsErrorImpl('internal', 'internal');\r\n                }\r\n                code = errorCodeMap[status_1];\r\n                // TODO(klimt): Add better default descriptions for error enums.\r\n                // The default description needs to be updated for the new code.\r\n                description = status_1;\r\n            }\r\n            var message = errorJSON.message;\r\n            if (typeof message === 'string') {\r\n                description = message;\r\n            }\r\n            details = errorJSON.details;\r\n            if (details !== undefined) {\r\n                details = serializer.decode(details);\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // If we couldn't parse explicit error data, that's fine.\r\n    }\r\n    if (code === 'ok') {\r\n        // Technically, there's an edge case where a developer could explicitly\r\n        // return an error code of OK, and we will treat it as success, but that\r\n        // seems reasonable.\r\n        return null;\r\n    }\r\n    return new HttpsErrorImpl(code, description, details);\r\n}\n\n/**\r\n * Helper class to get metadata that should be included with a function call.\r\n */\r\nvar ContextProvider = /** @class */ (function () {\r\n    function ContextProvider(authProvider, messagingProvider) {\r\n        var _this = this;\r\n        this.auth = null;\r\n        this.messaging = null;\r\n        this.auth = authProvider.getImmediate({ optional: true });\r\n        this.messaging = messagingProvider.getImmediate({\r\n            optional: true\r\n        });\r\n        if (!this.auth) {\r\n            authProvider.get().then(function (auth) { return (_this.auth = auth); }, function () {\r\n                /* get() never rejects */\r\n            });\r\n        }\r\n        if (!this.messaging) {\r\n            messagingProvider.get().then(function (messaging) { return (_this.messaging = messaging); }, function () {\r\n                /* get() never rejects */\r\n            });\r\n        }\r\n    }\r\n    ContextProvider.prototype.getAuthToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.auth) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.auth.getToken()];\r\n                    case 2:\r\n                        token = _a.sent();\r\n                        if (!token) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        return [2 /*return*/, token.accessToken];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        // If there's any error when trying to get the auth token, leave it off.\r\n                        return [2 /*return*/, undefined];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getInstanceIdToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.messaging ||\r\n                            !('Notification' in self) ||\r\n                            Notification.permission !== 'granted') {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.messaging.getToken()];\r\n                    case 2: return [2 /*return*/, _a.sent()];\r\n                    case 3:\r\n                        e_2 = _a.sent();\r\n                        // We don't warn on this, because it usually means messaging isn't set up.\r\n                        // console.warn('Failed to retrieve instance id token.', e);\r\n                        // If there's any error when trying to get the token, leave it off.\r\n                        return [2 /*return*/, undefined];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getContext = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authToken, instanceIdToken;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getAuthToken()];\r\n                    case 1:\r\n                        authToken = _a.sent();\r\n                        return [4 /*yield*/, this.getInstanceIdToken()];\r\n                    case 2:\r\n                        instanceIdToken = _a.sent();\r\n                        return [2 /*return*/, { authToken: authToken, instanceIdToken: instanceIdToken }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return ContextProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\r\nvar UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\r\nfunction mapValues(\r\n// { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\no, f) {\r\n    var result = {};\r\n    for (var key in o) {\r\n        if (o.hasOwnProperty(key)) {\r\n            result[key] = f(o[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer() {\r\n    }\r\n    // Takes data and encodes it in a JSON-friendly way, such that types such as\r\n    // Date are preserved.\r\n    Serializer.prototype.encode = function (data) {\r\n        var _this = this;\r\n        if (data == null) {\r\n            return null;\r\n        }\r\n        if (data instanceof Number) {\r\n            data = data.valueOf();\r\n        }\r\n        if (typeof data === 'number' && isFinite(data)) {\r\n            // Any number in JS is safe to put directly in JSON and parse as a double\r\n            // without any loss of precision.\r\n            return data;\r\n        }\r\n        if (data === true || data === false) {\r\n            return data;\r\n        }\r\n        if (Object.prototype.toString.call(data) === '[object String]') {\r\n            return data;\r\n        }\r\n        if (data instanceof Date) {\r\n            return data.toISOString();\r\n        }\r\n        if (Array.isArray(data)) {\r\n            return data.map(function (x) { return _this.encode(x); });\r\n        }\r\n        if (typeof data === 'function' || typeof data === 'object') {\r\n            return mapValues(data, function (x) { return _this.encode(x); });\r\n        }\r\n        // If we got this far, the data is not encodable.\r\n        throw new Error('Data cannot be encoded in JSON: ' + data);\r\n    };\r\n    // Takes data that's been encoded in a JSON-friendly form and returns a form\r\n    // with richer datatypes, such as Dates, etc.\r\n    Serializer.prototype.decode = function (json) {\r\n        var _this = this;\r\n        if (json == null) {\r\n            return json;\r\n        }\r\n        if (json['@type']) {\r\n            switch (json['@type']) {\r\n                case LONG_TYPE:\r\n                // Fall through and handle this the same as unsigned.\r\n                case UNSIGNED_LONG_TYPE: {\r\n                    // Technically, this could work return a valid number for malformed\r\n                    // data if there was a number followed by garbage. But it's just not\r\n                    // worth all the extra code to detect that case.\r\n                    var value = Number(json['value']);\r\n                    if (isNaN(value)) {\r\n                        throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                    }\r\n                    return value;\r\n                }\r\n                default: {\r\n                    throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                }\r\n            }\r\n        }\r\n        if (Array.isArray(json)) {\r\n            return json.map(function (x) { return _this.decode(x); });\r\n        }\r\n        if (typeof json === 'function' || typeof json === 'object') {\r\n            return mapValues(json, function (x) { return _this.decode(x); });\r\n        }\r\n        // Anything else is safe to return.\r\n        return json;\r\n    };\r\n    return Serializer;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a Promise that will be rejected after the given duration.\r\n * The error will be of type HttpsErrorImpl.\r\n *\r\n * @param millis Number of milliseconds to wait before rejecting.\r\n */\r\nfunction failAfter(millis) {\r\n    var timer;\r\n    var promise = new Promise(function (_, reject) {\r\n        timer = setTimeout(function () {\r\n            reject(new HttpsErrorImpl('deadline-exceeded', 'deadline-exceeded'));\r\n        }, millis);\r\n    });\r\n    return {\r\n        timer: timer,\r\n        promise: promise\r\n    };\r\n}\r\n/**\r\n * The main class for the Firebase Functions SDK.\r\n */\r\nvar Service = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Functions service for the given app and (optional) region or custom domain.\r\n     * @param app_ The FirebaseApp to use.\r\n     * @param regionOrCustomDomain_ one of:\r\n     *   a) A region to call functions from, such as us-central1\r\n     *   b) A custom domain to use as a functions prefix, such as https://mydomain.com\r\n     */\r\n    function Service(app_, authProvider, messagingProvider, appCheckProvider, regionOrCustomDomain_, fetchImpl) {\r\n        var _this = this;\r\n        if (regionOrCustomDomain_ === void 0) { regionOrCustomDomain_ = 'us-central1'; }\r\n        this.app_ = app_;\r\n        this.appCheckProvider = appCheckProvider;\r\n        this.fetchImpl = fetchImpl;\r\n        this.serializer = new Serializer();\r\n        this.emulatorOrigin = null;\r\n        this.INTERNAL = {\r\n            delete: function () {\r\n                return Promise.resolve(_this.deleteService());\r\n            }\r\n        };\r\n        this.contextProvider = new ContextProvider(authProvider, messagingProvider);\r\n        // Cancels all ongoing requests when resolved.\r\n        this.cancelAllRequests = new Promise(function (resolve) {\r\n            _this.deleteService = function () {\r\n                return resolve();\r\n            };\r\n        });\r\n        // Resolve the region or custom domain overload by attempting to parse it.\r\n        try {\r\n            var url = new URL(regionOrCustomDomain_);\r\n            this.customDomain = url.origin;\r\n            this.region = 'us-central1';\r\n        }\r\n        catch (e) {\r\n            this.customDomain = null;\r\n            this.region = regionOrCustomDomain_;\r\n        }\r\n    }\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the URL for a callable with the given name.\r\n     * @param name The name of the callable.\r\n     */\r\n    Service.prototype._url = function (name) {\r\n        var projectId = this.app_.options.projectId;\r\n        if (this.emulatorOrigin !== null) {\r\n            var origin_1 = this.emulatorOrigin;\r\n            return origin_1 + \"/\" + projectId + \"/\" + this.region + \"/\" + name;\r\n        }\r\n        if (this.customDomain !== null) {\r\n            return this.customDomain + \"/\" + name;\r\n        }\r\n        return \"https://\" + this.region + \"-\" + projectId + \".cloudfunctions.net/\" + name;\r\n    };\r\n    /**\r\n     * Modify this instance to communicate with the Cloud Functions emulator.\r\n     *\r\n     * Note: this must be called before this instance has been used to do any operations.\r\n     *\r\n     * @param host The emulator host (ex: localhost)\r\n     * @param port The emulator port (ex: 5001)\r\n     */\r\n    Service.prototype.useEmulator = function (host, port) {\r\n        this.emulatorOrigin = \"http://\" + host + \":\" + port;\r\n    };\r\n    /**\r\n     * Changes this instance to point to a Cloud Functions emulator running\r\n     * locally. See https://firebase.google.com/docs/functions/local-emulator\r\n     *\r\n     * @deprecated Prefer the useEmulator(host, port) method.\r\n     * @param origin The origin of the local emulator, such as\r\n     * \"http://localhost:5005\".\r\n     */\r\n    Service.prototype.useFunctionsEmulator = function (origin) {\r\n        this.emulatorOrigin = origin;\r\n    };\r\n    /**\r\n     * Returns a reference to the callable https trigger with the given name.\r\n     * @param name The name of the trigger.\r\n     */\r\n    Service.prototype.httpsCallable = function (name, options) {\r\n        var _this = this;\r\n        return function (data) {\r\n            return _this.call(name, data, options || {});\r\n        };\r\n    };\r\n    /**\r\n     * Does an HTTP POST and returns the completed response.\r\n     * @param url The url to post to.\r\n     * @param body The JSON body of the post.\r\n     * @param headers The HTTP headers to include in the request.\r\n     * @return A Promise that will succeed when the request finishes.\r\n     */\r\n    Service.prototype.postJSON = function (url, body, headers) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var appCheckToken, response, e_1, json, e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        headers['Content-Type'] = 'application/json';\r\n                        return [4 /*yield*/, this.getAppCheckToken()];\r\n                    case 1:\r\n                        appCheckToken = _a.sent();\r\n                        if (appCheckToken !== null) {\r\n                            headers['X-Firebase-AppCheck'] = appCheckToken;\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, this.fetchImpl(url, {\r\n                                method: 'POST',\r\n                                body: JSON.stringify(body),\r\n                                headers: headers\r\n                            })];\r\n                    case 3:\r\n                        response = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        // This could be an unhandled error on the backend, or it could be a\r\n                        // network error. There's no way to know, since an unhandled error on the\r\n                        // backend will fail to set the proper CORS header, and thus will be\r\n                        // treated as a network error by fetch.\r\n                        return [2 /*return*/, {\r\n                                status: 0,\r\n                                json: null\r\n                            }];\r\n                    case 5:\r\n                        json = null;\r\n                        _a.label = 6;\r\n                    case 6:\r\n                        _a.trys.push([6, 8, , 9]);\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 7:\r\n                        json = _a.sent();\r\n                        return [3 /*break*/, 9];\r\n                    case 8:\r\n                        e_2 = _a.sent();\r\n                        return [3 /*break*/, 9];\r\n                    case 9: return [2 /*return*/, {\r\n                            status: response.status,\r\n                            json: json\r\n                        }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Service.prototype.getAppCheckToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var appCheck, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        appCheck = this.appCheckProvider.getImmediate({ optional: true });\r\n                        if (!appCheck) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, appCheck.getToken()];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        // If getToken() fails, it will still return a dummy token that also has\r\n                        // an error field containing the error message. We will send any token\r\n                        // provided here and show an error if/when it is rejected by the functions\r\n                        // endpoint.\r\n                        return [2 /*return*/, result.token];\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Calls a callable function asynchronously and returns the result.\r\n     * @param name The name of the callable trigger.\r\n     * @param data The data to pass as params to the function.s\r\n     */\r\n    Service.prototype.call = function (name, data, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, body, headers, context, timeout, _a, timer, failAfterPromise, response, error, responseData, decodedData;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        url = this._url(name);\r\n                        // Encode any special types, such as dates, in the input data.\r\n                        data = this.serializer.encode(data);\r\n                        body = { data: data };\r\n                        headers = {};\r\n                        return [4 /*yield*/, this.contextProvider.getContext()];\r\n                    case 1:\r\n                        context = _b.sent();\r\n                        if (context.authToken) {\r\n                            headers['Authorization'] = 'Bearer ' + context.authToken;\r\n                        }\r\n                        if (context.instanceIdToken) {\r\n                            headers['Firebase-Instance-ID-Token'] = context.instanceIdToken;\r\n                        }\r\n                        timeout = options.timeout || 70000;\r\n                        _a = failAfter(timeout), timer = _a.timer, failAfterPromise = _a.promise;\r\n                        return [4 /*yield*/, Promise.race([\r\n                                clearTimeoutWrapper(timer, this.postJSON(url, body, headers)),\r\n                                failAfterPromise,\r\n                                clearTimeoutWrapper(timer, this.cancelAllRequests)\r\n                            ])];\r\n                    case 2:\r\n                        response = _b.sent();\r\n                        // If service was deleted, interrupted response throws an error.\r\n                        if (!response) {\r\n                            throw new HttpsErrorImpl('cancelled', 'Firebase Functions instance was deleted.');\r\n                        }\r\n                        error = _errorForResponse(response.status, response.json, this.serializer);\r\n                        if (error) {\r\n                            throw error;\r\n                        }\r\n                        if (!response.json) {\r\n                            throw new HttpsErrorImpl('internal', 'Response is not valid JSON object.');\r\n                        }\r\n                        responseData = response.json.data;\r\n                        // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\r\n                        // backwards compatibility.\r\n                        if (typeof responseData === 'undefined') {\r\n                            responseData = response.json.result;\r\n                        }\r\n                        if (typeof responseData === 'undefined') {\r\n                            // Consider the response malformed.\r\n                            throw new HttpsErrorImpl('internal', 'Response is missing data field.');\r\n                        }\r\n                        decodedData = this.serializer.decode(responseData);\r\n                        return [2 /*return*/, { data: decodedData }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Service;\r\n}());\r\nfunction clearTimeoutWrapper(timer, promise) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var result;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, promise];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    clearTimeout(timer);\r\n                    return [2 /*return*/, result];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Functions.\r\n */\r\nvar FUNCTIONS_TYPE = 'functions';\r\nfunction registerFunctions(instance, fetchImpl) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        Functions: Service\r\n    };\r\n    function factory(container, _a) {\r\n        var regionOrCustomDomain = _a.instanceIdentifier;\r\n        // Dependencies\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        var appCheckProvider = container.getProvider('app-check-internal');\r\n        var messagingProvider = container.getProvider('messaging');\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return new Service(app, authProvider, messagingProvider, appCheckProvider, regionOrCustomDomain, fetchImpl);\r\n    }\r\n    instance.INTERNAL.registerComponent(new Component(FUNCTIONS_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n}\n\nvar name = \"@firebase/functions\";\nvar version = \"0.6.12\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterFunctions(firebase, fetch.bind(self));\r\nfirebase.registerVersion(name, version);\n//# sourceMappingURL=index.esm.js.map\n"]}